1 GOTO65000'

        * SKELETON/BAS -- 
                      MAY 24, 2024 * TESTED 9/26/23

        FAST SYSTEM ROUTINES (10..9990):

	           BYTE-STREAM KBD GETC()

1900 FORX5%=0TO1STEP0:X9$=INKEY$:IFLEN(X9$)>0THENVR$(0)=X9$:X5%=1
1902 NEXT:RETURN'

        CONVERT-CHAR-COUNT()

1910 VR%(0)=VA!(0)<>0:IFNOTVR%(0)THENVR!(0)=0:VR%(1)=0:VR%(2)=0:RETURN
1912 VR!(0)=FNBL!(VA!(0),256,1,1):X3%=FNMD!(VA!(0),256):VR%(1)=X3%:IFX3%=0THENX3%=256
1916 VR%(2)=X3%-1:RETURN'

        GETC()

2000 VR%(0)=0:X9%=VA%(0):IFX9%<1THEN2050
2002 IFNOTSY%(X9%,1)=4RETURN
2004 IFNOTSY%(4,0)THEN2020'

        DISK GETC():
                A. BYTE-STREAM:
2006 VR%(0)=SY!(X9%,0)<SY!(X9%,2):IFNOTVR%(0)RETURN
2008 IFSY%(X9%,2)=256THENX9!=SY!(X9%,1):GETX9%,X9!:SY%(X9%,2)=0:SY!(X9%,1)=X9!+1:GOTO2006
2010 X8%=SY%(X9%,2):FIELDX9%,X8%ASX9$,1ASVR$(0):SY%(X9%,2)=X8%+1:SY!(X9%,0)=SY!(X9%,0)+1:RETURN'
                B. TEXT-STREAM:
2020 X9$=SY$(X9%,1):IFNOTSY%(X9%,2)>LEN(X9$)THEN2030
2024 IFEOF(X9%)RETURN
2026 LINEINPUT#X9%,X9$:SY$(X9%,1)=X9$+FNNL$(0):SY%(X9%,2)=1:GOTO2020
2030 VR$(0)=MID$(X9$,SY%(X9%,2),1):SY%(X9%,2)=SY%(X9%,2)+1:SY!(X9%,0)=SY!(X9%,0)+1:VR%(0)=NOT(SY!(X9%,0)>SY!(X9%,2)):IFNOTVR%(0)GOSUB60700
2032 RETURN'

        KBD GETC():
                A. BYTE-STREAM
2050 IFNOTX9%=FNKY%(0)RETURN
2052 IFSY%(4,0)GOSUB1900:VR%(0)=NOTVR$(0)=SY$(5,0):RETURN'
                B. TEXT-STREAM
2062 IFNOTSY%(0,2)>LEN(SY$(0,1))THEN2070
2064 LINEINPUTX9$:IFX9$=SY$(6,0)THENVR$(0)="":GOSUB60800:RETURN
2066 SY$(0,1)=X9$+FNNL$(0):SY%(0,2)=1
2070 VR$(0)=MID$(SY$(0,1),SY%(0,2),1):SY%(0,2)=SY%(0,2)+1:VR%(0)=-1:RETURN'

        GETCHAR()

2100 VA%(0)=FNST%(SY%(1,0)):GOTO2000'

        PUTS() / PUTC()

2200 X5%=VA%(0):IFX5%<1THEN2250'
        DISK PUTC():
                "P" MODE:
2202 IFSY%(X5%,1)<>6THENPRINT#X5%,VA$(0);:RETURN'
                APPEND MODE:
2204 X9$=VA$(0):FORX4%=1TOLEN(X9$):VA$(0)=MID$(X9$,X4%,1):GOSUB2500:NEXT:RETURN'
        DEVICES:
        SCREEN:
2250 IFX5%=FNSC%(0)PRINTVA$(0);:RETURN'
        PRINTER:
2255 IFX5%=FNPR%(0)LPRINTVA$(0);:RETURN'
        (FUTURE) CASSETTE:
2299 '
        PUTCHAR()

2300 VA%(0)=FNST%(SY%(2,0)):GOTO2200
2399 '
        CASSETTE GETC()

2499 '
        APPEND()

2500 X8%=VA%(0):X7%=SY%(X8%,2):FIELDX8%,X7%ASX7$,1ASX9$:LSETX9$=VA$(0)
2502 SY%(X8%,2)=X7%+1:SY!(X8%,2)=SY!(X8%,2)+1
2504 IFSY%(X8%,2)<256RETURN
2506 X8!=SY!(X8%,1):PUTX8%,X8!:SY!(X8%,1)=X8!+1:SY%(X8%,2)=0:RETURN
4999 '
        BASIC-SCAN()

5000 VR%(0)=0:VR%(2)=0:FORX9%=VA%(0)TOVA%(1):IFFNXR%(VA%(2),INSTR(VA$(1),MID$(VA$(0),X9%,1))>0)THENVR%(2)=VR%(2)+1:NEXT
5002 VR%(1)=NOT(VA%(0)+VR%(2)>LEN(VA$(0))):RETURN'

        SKIP-WHILE()

5020 VA%(2)=0
5022 GOSUB5000:GOSUB5142:GOSUB5180:RETURN'

        SKIP-UNTIL()

5030 VA%(2)=-1:GOTO5022'

        GATHER-WHILE()

5040 VA%(2)=0
5042 GOSUB5000:VR%(0)=VR%(2)>0:RETURN'

        GATHER-UNTIL()

5050 VA%(2)=-1:GOTO5042'

        SAVE-CURRENT-ARGS-&-RETURNS()

5100 SY%(13,0)=VA%(0):SY%(14,0)=VA%(1):SY%(12,0)=VR%(0):SY%(11,0)=VR%(1):SY%(15,0)=VR%(2):RETURN'

        RECOVER-ARGS-FROM-SSVS()

5120 FORX9%=0TO1:VA%(X9%)=SY%(13+X9%,0):NEXT:RETURN'

        UPDATE-CURSOR()

5140 SY%(13,0)=SY%(13,0)+SY%(15,0):RETURN
5142 VA%(0)=VA%(0)+VR%(2):RETURN' UPDATE IN ARG STACK VERSION

        INIT-SCAN-STRING()

5160 SY%(14,0)=LEN(VA$(0)):SY%(11,0)=SY%(14,0)>0:SY%(13,0)=ABS(SY%(11,0)):GOSUB5120:RETURN'

        MORE-TO-SCAN-Q()

5180 SY%(11,0)=SY%(13,0)<LEN(VA$(0)):IFNOTSY%(11,0)THENSY%(11,0)=NOT(INSTR(VA$(1),MID$(VA$(0),SY%(13,0),1))>0)
5182 RETURN'

        SAVE-SSVS()

5200 X5%=SY%(0,3):IFX5%>2THENRETURN'
        ROOM FOR ANOTHER SAVE:
5202 GOSUB5290:FORX4%=1TO5:SY%(X6%+X4%,3)=SY%(10+X4%,0):NEXT:SY$(X5%,2)=VA$(0):SY%(0,3)=X5%+1:RETURN' CALC OFFSET: SAVE SY%()S: SAVE SR$: INC "SP"

        RESTORE-SSVS()

5250 X5%=SY%(0,3)-1:IFX5%<0THENRETURN'
        STILL AT LEAST 1 SET TO POP:
5252 GOSUB5290:FORX4%=1TO5:SY%(10+X4%,0)=SY%(X6%+X4%,3):NEXT:VA$(0)=SY$(X5%,2):SY%(0,3)=X5%:RETURN' CALC OFFSET: RESTORE SY%()S: RESTORE SR$: DEC "SP"

        SUPPORT CALCS:

5290 X6%=X5%*5:RETURN' OFFSET INTO SY%(..,3)
5399 '
        RETURN-GATHERED()

5400 VR$(0)=MID$(VA$(0),VA%(0),VR%(2)):RETURN'

        RETURN-GATHERED-&-UPDATE-CC%()

5402 GOSUB5400:GOSUB5142:RETURN'

        RETURN-G-&-U-CC%-&-SAVE-SSVS()

5410 GOSUB5402:GOSUB5100:RETURN
5499 '
        SKIP-WS()

5500 VA$(1)=FNWS$(0):GOSUB5120:GOSUB5020:GOSUB5100:RETURN'

        NEXT-TOKEN()

5600 GOSUB5500:IFNOTSY%(11,0)THEN5680'

        GET-TOKEN()

5610 VR$(0)="":SY%(12,0)=0:GOSUB5120:GOSUB5050:GOSUB5100:IFSY%(12,0)THENVR$(0)=MID$(VA$(0),SY%(13,0),SY%(15,0))
5680 GOSUB5140:RETURN
5799 '
        STRING FORMATTING

        FMT-NUM() -- SP IN MIN WIDTH FIELD

5800 X9$=FNNP$(STR$(VA!(0))):VR$(0)=STRING$(FNMX%(LEN(X9$),VA%(1)),32):RSETVR$(0)=X9$:RETURN
9499 '
        WORD-POKE()

9500 X5%=FNSI%(VA!(0)-1):X5$=MKI$(FNSI%(VA!(1)))
9502 FORX4%=1TO2:POKEX5%+X4%,ASC(MID$(X5$,X4%,1)):NEXT:RETURN
9999 '
        USER SUBROUTINES (10000..39990):

39998 '
        USER MAIN() (40000..59990):

59990 GOSUB60920' FCLOSE-ALL()
59994 '
        RETURN TO SHELL

59995 RUN"SH/BAS"
59998 '
        SYSTEM SUPPORT ROUTINES (60000..64990):

59999 '
        SEARCHING

        INIT-SSVS()

60000 SY%(11,0)=0:SY%(12,0)=0:SY%(15,0)=0:SY%(13,0)=1:SY%(14,0)=1:RETURN' MORE-TO-SCAN: f; SCAN-RESULT: F; SELECTION-LENGTH:0
CURRENT-CURSOR:1; UP-TO: 1
60009 '
        INIT CHAR SET IN SY$(SUB,0)
        VA%(0)  SUB
        VA$(0)  START CHAR
        VA$(1)  END CHAR

60010 X5%=VA%(0):X7%=ASC(VA$(0)):X8%=ASC(VA$(1)):X6%=X8%-X7%+1:SY$(X5%,0)=STRING$(X6%,32)' SET UP CHAR SET AS ALL BLANKS
60012 FORX9%=X7%TOX8%:X6%=X9%-X7%+1:MID$(SY$(X5%,0),X6%,1)=CHR$(X9%):NEXT:RETURN' FILL SY$(VA%(0),0) WITH CHARS FROM X7% TO X8%
60019 '
        INIT-CHAR-SETS()

60020 VA%(0)=8:VA$(0)="0":VA$(1)="9":GOSUB60010' NUMERICS
60022 VA%(0)=9:VA$(0)="A":VA$(1)="Z":GOSUB60010' UC
60024 VA%(0)=10:VA$(0)="a":VA$(1)="z":GOSUB60010' lc
60028 SY$(11,0)=" "+CHR$(10)+FNNL$(0)' WS
60029 RETURN
60299 '
        PUT-NUM()

60300 GOSUB5800:VA$(0)=VR$(0):GOSUB60100:RETURN' PUTS( FMT-NUM( ))

        PUTDEC( NUM!, WIDTH%) -- PUTNUM() ON STDOUT

60350 VA%(0)=FNST%(SY%(2,0)):GOSUB60300:RETURN' PUTNUM( STDOUT)
60499 '
        FILE OPS:

        OPEN()

60500 VR%(0)=0:X1%=VA%(1):X9%=VA%(0):IFX9%<0THENRETURNELSEVA$(5)="OPEN"'

        DISK OPEN()
        1. ROOM FOR ANOTHER FILE?

60505 IFX9%>FNDN%(0)THENVA$(6)="NO ROOM":GOSUB60951:RETURN'

        2. INCREMENT OPEN FILE COUNT

60510 SY%(5,0)=SY%(5,0)+1:IFNOTX9%=0THEN60520'

        3. DO WE NEED TO HAVE A FD# ASSIGNED?
                CYCLE THRU FD#S, LOOKING FOR EMPTY SLOT

60512 FORX8%=1TOSY%(5,0):IFSY%(X8%,1)=0THENX9%=X8%:GOTO60520
60514 NEXT:VA$(6)="NO ROOM TO OPEN":GOSUB60950:RETURN'

        4. DOES FD# MATCH AN ALREADY-OPEN FILE?

60520 IFFNDF%(SY%(X9%,1))THENVA$(6)="ALREADY IN USE":GOSUB60950:RETURN'

        5. CONFIRM "OPEN" MODE
                A. DOES VA%(1) CONTAIN VALID MODE?

60525 IFNOTFNDF%(X1%)THENX1%=INSTR("IORGPA",CHR$(FNTU%(ASC(VA$(1)))))' CONVERT VA$(1) TO X1%

                B. IS IT VALID NOW?

60530 IFNOTFNDF%(X1%)THENVA$(6)="NOT VALID 'OPEN' MODE":GOSUB60950:RETURN
60532 VR%(1)=X9%' RETURN ASSIGNED FD#

        6. SET UP EXCEPTION IF FILE DOESN'T EXIST

60534 ONERRORGOTO65500'

        7. OPEN THE FILE

60540 ONX1%GOTO60610,60620,60630,60640,60650,60660:VA$(6)=STR$(X1%)+" IS NOT VALID OPEN MODE #":GOSUB60950:RETURN
60599 '
                7A. OPEN "I"

60610 OPEN"I",X9%,VA$(0):GOTO60700
60615 GOTO60690'
                7B. OPEN "O"

60620 GOSUB60840:IFVR%(0)THEN60700
60625 GOTO60690'
                7C. OPEN "R"

60630 OPEN"R",X9%,VA$(0):GOTO60700
60635 GOTO60690'
                7D. OPEN "G"

60640 IFSY%(4,0)THEN60630ELSE60610' BYTE STREAM: "R"; TEXT STREAM: "I"

                7E. OPEN "P"

60650 GOTO60620' USE "O"

                7F. OPEN "A"

60660 GOSUB60830:IFVR%(0)THENRETURNELSE60690
60690 VA$(6)="CAN'T OPEN IN MODE '"+MID$("IORGPA",VA%(1),1)+"'":GOSUB60950:RETURN'

	        SET UP DEFAULT FILE PARAMS

60700 SY%(X9%,1)=X1%:SY!(X9%,0)=0:SY!(X9%,1)=1:SY!(X9%,2)=FNDX!(X9%):GOSUB60810' SET UP OPEN MODE, CHAR POS IN RECORD, CHAR COUNT, CHAR POS, TOTAL CHAR COUNT
60790 VR%(0)=-1:RETURN
60799 '
        RESET-KEYBOARD()

60800 SY$(0,1)="":SY%(0,2)=1:RETURN'

        RESET-DISK-BUFFER()

60810 SY$(X9%,1)="":SY%(X9%,2)=256:RETURN'

        APPEND-OPEN()

60830 VA$(6)="'A'PPEND MODE: CAN'T OPEN"
60832 OPEN"R",X9%,VA$(0):GOTO60834
60833 VR%(0)=0:RETURN' FILE NOT FOUND: ERROR EXIT
60834 X7!=FNDX!(X9%):IFX7!=0THEN60836'
        EXISTING FILE: 'A'PPEND MODE
60835 X7!=X7!+1:SY%(X9%,1)=6:SY!(X9%,2)=X7!:SY!(X9%,0)=X7!:VA!(0)=X7!:GOSUB1910:SY!(X9%,1)=VR!(0):SY%(X9%,2)=VR%(2):GETX9%,SY!(X9%,1):GOTO60839'
        EMPTY FILE: 'O' MODE INSTEAD
60836 CLOSEX9%:OPEN"O",X9%,VA$(0):GOTO60838
60837 GOTO60833' ERROR EXIT
60838 SY%(X9%,1)=2:SY!(X9%,0)=0:SY!(X9%,1)=1:SY!(X9%,2)=0:GOSUB60810
60839 VR%(1)=X9%:VR%(0)=-1:RETURN'

        OUTPUT-OPEN()

60840 VA$(6)="'O'UTPUT MODE: CAN'T OPEN"
60842 OPEN"O",X9%,VA$(0):VR%(0)=-1:RETURN
60844 VR%(0)=0:RETURN
60899 '
        CLOSE ROUTINES:

        APPEND-CLOSE()

60900 X8%=VA%(0):PUTX8%,SY!(X8%,1):VA!(0)=SY!(X8%,2):GOSUB1910
60902 POKEFNDL%(X8%),VR%(2):VA!(0)=FNDE!(X8%):VA!(1)=FNSI%(VR!(0)):GOSUB9500
60908 CLOSEX8%:RETURN'

        FCLOSE()

60910 X9%=VA%(0):X8%=SY%(X9%,1):IFX8%<1RETURN
60912 IFFNDF%(X8%)THENIFX8%=6THENGOSUB60900ELSECLOSEX9%
60916 SY%(X9%,1)=0' CLEAR OPEN MODE AFTER CLOSE
60918 RETURN'

        FCLOSE-ALL()

60920 FORX5%=1TOFNDN%(0):VA%(0)=X5%:GOSUB60910:NEXT:RETURN
60949 '
        F-OPEN-ERROR-REPORT()

60950 SY%(5,0)=SY%(5,0)-1
60951 VA$(10)="ERROR: '"+VA$(0)+"'-"+VA$(5)+" "+VA$(6)+" IN"+STR$(X9%)
60952 VR%(0)=0
60954 GOSUB65520
60958 RETURN
62999 '
        I/O

63998 '
        INIT SUPPORT ROUTINES

63999 ' DEFINE-FUNCTIONS()

        1. CHAR & STRING

64000 DEFFNCL%(C%)=C%>&H60ANDC%<&H78:DEFFNTU%(C%)=C%+32*FNCL%(C%)' ISLOWER( C%); TOUPPER( C%)
64006 DEFFNNM$(X)=SY$(8,0):DEFFNUC$(X)=SY$(9,0):DEFFNLC$(X)=SY$(10,0):DEFFNAL$(X)=FNUC$(0)+FNLC$(0):DEFFNAN$(X)=FNAL$(0)+FNNM$(0):DEFFNWS$(X)=SY$(11,0):DEFFNUS$(X)=SY$(14,0)' NUMERIC, UC, LC, ALPHA, ALPHANUMERIC, WHITESPACE, USER-DEFINED STR
64008 DEFFNNL$(X)=CHR$(13)' NEWLINE
64009 '
        2. MATH, NUMBER TYPES & ADDRESSES

64010 DEFFNMX%(A%,B%)=(A%<B%)*-B%+(NOTA%<B%)*-A%:DEFFNMN%(A%,B%)=(A%<B%)*-A%+(NOTA%<B%)*-B%' MAX(), MIN()
64011 DEFFNXR%(A%,B%)=(A%ORB%)-(A%ANDB%):DEFFNLG%(N%)=NOT(N%=0):DEFFNMD!(S!,D!)=S!-INT(S!/D!)*D!' XOR; "LOGICAL" CONVERTS ALL NON-0 TO -1; S! MOD D!
64012 DEFFNSI%(S!)=-((S!>32767)*(S!-65536))-((S!<32768)*S!):DEFFNIS!(I%)=(I%<0)*-(65536+I%)+(NOTI%<0)*-I%' ADDR FUNCS: SP! -> SIGNED INT; SIGNED INT -> SP!
64014 DEFFNSW%(BL%,BH%)=CVI(CHR$(BL%)+CHR$(BH%)):DEFFNLB%(W!)=FNMD!(FNIS!(W!),256):DEFFNHB%(W!)=INT(FNIS!(W!)/256)' 2 BYTES -> INT; CONVERT WORD W! INTO LOW BYTE AND HIGH BYTE
64016 DEFFNWP!(A%)=FNIS!(FNSW%(PEEK(A%),PEEK(A%+1)))' "WORD PEEK": WORD VALUE AT A%, A%+1
64018 DEFFNNP$(S$)=MID$(S$,2+((LEFT$(S$,1))="-"),LEN(S$))' NP$()--REMOVE LEADING BLANKS FROM CONVERTED NUM
64019 '
        3. SYSTEM FNS

64020 DEFFNE4%(E%)=E%/2+1' ERROR CODE
64029 '
        4. DCB ADDRESS AND FILE INFO FNS

64030 DEFFND0%(X)=26303:DEFFND1%(X)=290' BASE DCB ADDRESS; SIZE OF DCB+BUFFER; DEFAULTS TO TRSDOS 2.3 FOR mODEL I. EDIT FOR OTHER DOS & MODEL
64031 '         D0      D1
TRSDOS 1.3 M3   26182   360
NEWDOS 2.1 M1   25941   290
NEWDOS/80  M1   26315   301
LDOS 5.0.3 M1   27205   546

64032 DEFFNDB%(F%)=FND0%(0)+FND1%(0)*(F%-1):DEFFNDC%(F%)=FNDB%(F%)+5:DEFFNDL%(F%)=FNDB%(F%)+8:DEFFNDE%(F%)=FNDB%(F%)+12' DB: DCB ADDR; DC: ADDR OF OFFSET IN CURRENT REC; DL: IN LAST REC; DE: END REC
64034 DEFFNDN%(X)=PEEK(&H408E)' MAX NUMBER OF FILES, TRSDOS 2.3 MODEL I
64036 DEFFNDE!(F%)=FNWP!(FNDE%(F%)):DEFFNDQ%(F%)=((PEEK(FNDL%(F%))=0)*-256)+(NOTPEEK(FNDL%(F%))=0)*-PEEK(FNDL%(F%)):DEFFNDX!(F%)=FNDQ%(F%)+256*(FNDE!(F%)-1)' DX: BYTE COUNT; USES DE! AND DQ! TO DETERMINE
64037 DEFFNBL!(IC!,BS%,BO%,IO%)=INT((IC!-IO%)/BS%)+BO%' BLOCK() -- RETURNS RECORD # FOR TOTAL CHAR CT/IC!, BASED ON RECORD SIZE/BS%, RECORD ORIGIN/BO%, AND ITEM ORIGIN/IO%
64038 DEFFNDF%(M%)=M%>0ANDM%<7' IS M% A VALID OPEN() MODE?
64040 DEFFNST%(SL%)=ABS(SL%>99)*SY%(ABS(INT(SL%/100)),0)+ABS(SL%<100)*SL%' STD SLOT TRANSLATION
64042 DEFFNAC%(X)=SY%(0,0)' ARGC
64049 '
        5. DEVICE CONSTANTS

64050 DEFFNC1%(X)=-4:DEFFNC2%(X)=-5:DEFFNKY%(X)=-1:DEFFNPR%(X)=-3:DEFFNRS%(X)=-6:DEFFNSC%(X)=-2' CAS 1, CAS 2, KEYBOARD, PRINTER, RS-232, SCREEN
64090 RETURN
64499 '
        INIT-IO-VALS()

64500 SY%(1,0)=FNKY%(0):SY%(2,0)=FNSC%(0):SY%(3,0)=FNSC%(0)' DEFAULT DEVS FOR STDIN, STDOUT, STDERR
64502 SY$(15,0)="CMDLINE/SH"' SEQ FILE CONTAINNG CMD LINE, STD FILE ASSIGNMENTS
64504 SY$(4,0)=FNNL$(0):SY$(5,0)=CHR$(27):SY$(6,0)=".":SY$(7,0)="."' NL, EOF CHARS
64506 SY%(6,0)=-1' EXIT AFTER USAGE()
64508 RETURN
64509 '
        SCAN-ARGV() -- SCAN ARGV() FOR STRINGS SPEC'D IN AV$(0)
        RETURN S/F IN VR%(0)

64600 VR%(0)=0:VR%(1)=0:IFSY%(0,0)=0RETURN' NO ARGV()S
64610 FORX9%=1TOSY%(0,0)
64620 IFINSTR(VA$(0),AV$(X9%))>0THENVR%(0)=-1:VR%(1)=X9%:RETURN
64630 NEXT
64640 RETURN
64899 '
        USAGE()

64900 VA$(0)="-H --H -? --? -USAGE --USAGE":GOSUB64600:IFVR%(0)=0RETURN
64905 READVA$(10):IFVA$(10)="."THEN64940
64910 GOSUB65520:GOTO64905' PUT-ERR()
64940 IFSY%(6,0)THEN59990' IF FLAGGED, EXIT THIS PROGRAM GRACEFULLY
64948 RETURN
64949 '
        USAGE DATA LINES: REPLACE WITH USAGE TEXT, IN QUOTES
                LEAVE LAST "." TO TERMINATE

64950 DATA"SKELETON/BAS: FRAMEWORK FOR 'SOFTWARE TOOLS'"
64952 DATA " "
64998 DATA"."
64999 '
        ** INITIALIZATION (65000..65529) **

        INITIALIZATION()

65000 SS%=500' "STRING SPACE" IN BYTES
65002 CLEARSS%
65004 X9%=15' "LENGTH" OF SYSTEM ARRAYS
65006 DIMSY%(X9%,3),SY!(X9%,2),SY$(X9%,2)
65008 D0%=1' SYSTEM-WIDE DEBUG FLAG
65020 GOSUB65050' INITIALIZE
65048 GOTO40000'

        * INIT SCHEDULER *

        INITIALIZE()

65050 GOSUB65100' INIT-VALS()
65052 GOSUB65150' INIT-CMD-LINE()
65054 GOSUB65200' INIT-USER-PRGM()
65056 GOSUB65250' INIT-STD-FILES()
65058 GOSUB65300' OPTIONAL-PACKAGES()
65098 RETURN'

        INIT-VALS() -- INITIALIZE STD DEVS, DEF FNS

65100 GOSUB60000' INIT-SSVS()
65102 GOSUB60800' RESET-KEYBOARD()
65104 GOSUB64000' DEFINE-FUNCTIONS()
65108 GOSUB64500' INIT-IO-VALS()
65112 GOSUB60020' INIT-CHAR-SETS()
65148 RETURN'

        INIT-CMDLINE() -- READ CMDLINE/SH,
                        PARSE CMD LINE & PROGRAM NAME,
                        ARGC, ARGV

65149 '
        1. TRY TO READ "CMDLINE/SH"

65150 VR%(0)=0:ONERRORGOTO65500
65152 OPEN"I",1,SY$(15,0)
65154 ONERRORGOTO0'

        2. IF CMDLINE FILE EXISTS:

65156 IFVR%(0)THENVR%(0)=0:RETURN' NO IT DOESN'T

        3. READ SY$(0..3,0)

65158 FORX9%=0TO3:INPUT#1,SY$(X9%,0):NEXT:CLOSE#1'

        4. PARSE CMD LINE IN SY$(0..,0) INTO AV$(0..)
                ARGC -> SY%(0,0)

        4A. PROGRAM NAME -> AV$(0)

65160 SY%(0,0)=0:VA$(0)=SY$(0,0):GOSUB5160:IFNOTSY%(11,0)RETURN
65161 GOSUB5600:IFNOTSY%(12,0)RETURN
65162 AV$(0)=VR$(0)'

        4B. ARGS -> AV$(1..N)

65170 GOSUB5600:IFNOTSY%(12,0)RETURN
65172 SY%(0,0)=SY%(0,0)+1:AV$(SY%(0,0))=VR$(0):IFSY%(11,0)THEN65170
65174 RETURN
65198 '

        USER-PROGRAM-INIT() -- USER ARGV -OPTION DECODING

65200 ' SYSTEM -OPTION DECODING HERE

        USER CAN ACCESS ARGC / SY%(0,0) AND
                ARGV() / AV$(0)..AV$(ARGC)
                AS NEEDED IN THEIR PROGRAM

65248 RETURN'

        INIT-STD-FILES() -- STDIN, STDOUT, STDERR REDIRECT

65250 VR%(0)=0:FORX7%=1TO3:IFLEN(SY$(X7%,0))<1THEN65290' ONLY ATTEMPT TO OPEN NAMED FILES
65252 IFX7%=1THENSY%(4,0)=-1' DEFAULT BYTE-STREAM INPUT FOR STDIN FILE
65254 IFINSTR(SY$(X7%,0),"-")>0THENVR%(1)=VAL(SY$(X7%,0)):GOTO65280' I/O REASSIGNED
65255 X6%=VAL(SY$(X7%,0)):IFX6%>99THENVR%(1)=X6%:GOTO65280' STD SLOT RE-ASSIGNED (IE, "3>2", WHERE X7%=3=STDERR IS ENCODED AS "200")
65256 VA$(1)=MID$("GPO",X7%,1):VA%(1)=0:VA$(0)=SY$(X7%,0):VA%(0)=0
65257 X9%=INSTR(VA$(0),"+"):IFX9%THENVA$(0)=LEFT$(VA$(0),X9%-1):VA$(1)="A"' STDOUT/ERR APPEND MODE SIGNIFIED BY "+" AFTER FILENAME
65258 GOSUB60500
65280 SY%(X7%,0)=VR%(1)' ASSIGN FD# TO STD FILE#
65290 NEXT:RETURN'

        OPTIONAL PACKAGES

65300 GOSUB64900' USAGE()
65498 RETURN'

        * ERROR HANDLING:
        *

65499 '
        * FILE NOT FOUND ERROR HANDLER *

65500 VR%(0)=FNE4%(ERR)=54:IFVR%(0)THENRESUMENEXT
65502 ONERRORGOTO0
65504 RESUME
65519 '
        ERROR REPORTING:

        PUTERR() -- WRITE MSG TO ERROR DEV/FILE

65520 VA%(0)=FNST%(SY%(3,0)):IFVA%(0)=0THENVA%(0)=FNSC%(0)' DEFAULT REPORT TO SCREEN IF STDERR NOT ASSIGNED
65522 VA$(0)=VA$(10)+FNNL$(0):GOSUB60100:RETURN
